name: MERN CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # -------------------
  # 1. Server (Node.js/Express) Tests
  # -------------------
  server-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand({ping: 1})'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install server dependencies
        working-directory: ./server
        run: npm ci

      - name: Check server can start
        working-directory: ./server
        run: timeout 10s npm start || echo "Server start check completed"
        env:
          NODE_ENV: test
          MONGO_URI: mongodb://localhost:27017/issue_tracker_test

  # -------------------
  # 2. Client (React) Tests
  # -------------------
  client-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: Check client can build
        working-directory: ./client
        run: npm run build

      - name: Run client linting
        working-directory: ./client
        run: npm run lint || echo "Linting issues found"


  # -------------------
  # 3. Docker Compose Validation
  # -------------------
  docker-compose-test:
    runs-on: ubuntu-latest
    needs: [server-test, client-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker compose version

      - name: Build with Docker Compose
        run: docker compose build

      - name: Test Docker Compose startup
        run: |
          docker compose up -d
          sleep 10
          docker compose ps
          docker compose down
